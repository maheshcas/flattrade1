{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import ApiHandler from\"./components/ApiHandler\";import Dashboard from\"./components/Dashboard\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){const[apiKey,setApiKey]=useState(localStorage.getItem(\"apiKey\")||\"\");const[authDetails,setAuthDetails]=useState({code:null,client:null});const[loading,setLoading]=useState(true);const navigate=useNavigate();const flattradeAuthUrl=`https://auth.flattrade.in/?app_key=${apiKey}`;useEffect(()=>{const queryParams=new URLSearchParams(window.location.search);const code=queryParams.get(\"code\");const client=queryParams.get(\"client\");if(code&&client){setAuthDetails({code,client});localStorage.setItem(\"code\",code);localStorage.setItem(\"client\",client);fetchToken(apiKey,code);}else if(!apiKey){navigate(\"/api-key\");}else{window.location.href=flattradeAuthUrl;}},[apiKey]);const fetchToken=async(key,code)=>{setLoading(true);const crypto=await import(\"crypto-js\");const shaSecret=crypto.SHA256(key+code+\"2025.8199821099b74d748969f3143d73a3b1481bebed356ccf4d\").toString();try{const response=await fetch(\"/.netlify/functions/fetchToken\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({api_key:key,request_code:code,api_secret:shaSecret})});const data=await response.json();if(data!==null&&data!==void 0&&data.token){localStorage.setItem(\"token\",data.token);}}catch(error){console.error(\"Token fetch failed:\",error);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col min-h-screen\",children:/*#__PURE__*/_jsx(\"main\",{className:\"flex-grow p-4\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading authentication data...\"}):authDetails.code&&authDetails.client?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Authentication Details\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Code: \",authDetails.code]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Client: \",authDetails.client]}),/*#__PURE__*/_jsx(ApiHandler,{}),/*#__PURE__*/_jsx(Dashboard,{})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Redirecting to authentication...\"})})});}","map":{"version":3,"names":["React","useState","useEffect","ApiHandler","Dashboard","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","apiKey","setApiKey","localStorage","getItem","authDetails","setAuthDetails","code","client","loading","setLoading","navigate","flattradeAuthUrl","queryParams","URLSearchParams","window","location","search","get","setItem","fetchToken","href","key","crypto","shaSecret","SHA256","toString","response","fetch","method","headers","body","JSON","stringify","api_key","request_code","api_secret","data","json","token","error","console","className","children"],"sources":["C:/Users/Maheswar/OneDrive/Desktop/hedging/Pro2/flattrade/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ApiHandler from \"./components/ApiHandler\";\nimport Dashboard from \"./components/Dashboard\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function App() {\n  const [apiKey, setApiKey] = useState(localStorage.getItem(\"apiKey\") || \"\");\n  const [authDetails, setAuthDetails] = useState({ code: null, client: null });\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const flattradeAuthUrl = `https://auth.flattrade.in/?app_key=${apiKey}`;\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const code = queryParams.get(\"code\");\n    const client = queryParams.get(\"client\");\n\n    if (code && client) {\n      setAuthDetails({ code, client });\n      localStorage.setItem(\"code\", code);\n      localStorage.setItem(\"client\", client);\n      fetchToken(apiKey, code);\n    } else if (!apiKey) {\n      navigate(\"/api-key\");\n    } else {\n      window.location.href = flattradeAuthUrl;\n    }\n  }, [apiKey]);\n\n  const fetchToken = async (key, code) => {\n    setLoading(true);\n    const crypto = await import(\"crypto-js\");\n    const shaSecret = crypto\n      .SHA256(key + code + \"2025.8199821099b74d748969f3143d73a3b1481bebed356ccf4d\")\n      .toString();\n    try {\n      const response = await fetch(\"/.netlify/functions/fetchToken\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ api_key: key, request_code: code, api_secret: shaSecret }),\n      });\n      const data = await response.json();\n      if (data?.token) {\n        localStorage.setItem(\"token\", data.token);\n      }\n    } catch (error) {\n      console.error(\"Token fetch failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <main className=\"flex-grow p-4\">\n        {loading ? (\n          <p>Loading authentication data...</p>\n        ) : authDetails.code && authDetails.client ? (\n          <>\n            <h2 className=\"text-xl font-bold mb-4\">Authentication Details</h2>\n            <p>Code: {authDetails.code}</p>\n            <p>Client: {authDetails.client}</p>\n            <ApiHandler />\n            <Dashboard />\n          </>\n        ) : (\n          <p>Redirecting to authentication...</p>\n        )}\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}